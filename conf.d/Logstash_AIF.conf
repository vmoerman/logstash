input {
  beats {
    port => 5037
  }
}

filter {
  json { source => message }

  mutate {
    remove_field =>  ["host"]
  }

  mutate {
    rename => [ "CallDateTime" , "businessEventTimestamp"]

  }
}

filter {
  if [ActionId] =~ "H2O_CUS" {
    mutate {
		 add_field => {"application" => "eLoket"}
	 }
  }
  if [ActionId] =~ "H2O_SVM" {
    mutate {
		 add_field => {"application" => "MoKa"}
	 }
  }
}

filter {
  if [application] == "eLoket" {
    mutate {
		 add_field => {"businessTransactionID" => "%{[ELoketSpecificLoggingFields][0][TransactionId]}"}
		 add_field => {"accountNumber" => "%{[ELoketSpecificLoggingFields][0][CustomerId]}"}
	 }
  }
  if [application] == "MoKa"{
    mutate {
		 add_field => {"ServiceOrderId" => "%{[MokaSpecificLoggingFields][0][ServiceOrderId]}"}
		 add_field => {"EmployeeNumber" => "%{[MokaSpecificLoggingFields][0][EmployeeNumber]}"}
		 add_field => {"businessTransactionID" => "%{[MokaSpecificLoggingFields][0][TransactionId]}"}
	 }

  }
}

filter {
  mutate {
    rename => [ "ActionId" , "ProcessName"]
  }
  mutate {
    add_field => { "responsetime" => "%{[ResponseTimeInMiliSeconds]}" }
  }
  mutate {
    convert => {
      "responsetime" => "integer"
    }
  }
}

filter {
  mutate {
    remove_field =>  ["host", "message"]
  }
}

filter { 
 if [businessTransactionID] == "%{[ELoketSpecificLoggingFields][0][TransactionId]}" {
     mutate {
      remove_field =>  ["businessTransactionID"]
     }
 }
 if [accountNumber] == "%{[ELoketSpecificLoggingFields][0][CustomerId]}" {
     mutate {
      remove_field =>  ["accountNumber"]
     }
 }
 if [ServiceOrderId] == "%{[MokaSpecificLoggingFields][0][ServiceOrderId]}" {
     mutate {
      remove_field =>  ["ServiceOrderId"]
     }
 }
 if [EmployeeNumber] == "%{[MokaSpecificLoggingFields][0][EmployeeNumber]}" {
     mutate {
      remove_field =>  ["EmployeeNumber"]
     }
 }
 if [businessTransactionID] == "%{[MokaSpecificLoggingFields][0][TransactionId]}" {
     mutate {
      remove_field =>  ["businessTransactionID"]
     }
 }
}

## Rename ProcessName AiF logs

filter {

  if [ProcessName] == "H2O_CUS_PortalServiceGetCustomerInfo.GetCustomerInfo" {
    mutate {
      replace => {"ProcessName" => "ElkGetCustomer"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceChangeCustomerData.ChangeCustomerData" {
    mutate {
      replace => {"ProcessName" => "ElkUpdateCustomer"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceGetAgreementInfo.GetAgreementInfo" {
    mutate {
      replace => {"ProcessName" => "ElkGetAgreement"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceGetCustTransactions.GetCustomerTransactions" {
    mutate {
      replace => {"ProcessName" => "ElkGetCustomerTransactions"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceValidateBankAccount.ValidateBankAccount" {
    mutate {
      replace => {"ProcessName" => "ElkValidateBankAccount"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceGetMeterRequestInfo.GetMeterRequestInfo" {
    mutate {
      replace => {"ProcessName" => "ElkGetMeterReadRequest"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceGetBankAccounts.GetBankAccounts" {
    mutate {
      replace => {"ProcessName" => "ElkGetBankAccount"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceCreateMeterReading.CreateMeterReading" {
    mutate {
      replace => {"ProcessName" => "ElkCreateMeterReading"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceValidateCustomer.ValidateCustomer" {
    mutate {
      replace => {"ProcessName" => "ElkValidateCustomer"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceValidateToken.ValidateToken" {
    mutate {
      replace => {"ProcessName" => "ElkValidateToken"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceGetConsumptionData.GetConsumptionData" {
    mutate {
      replace => {"ProcessName" => "ElkGetConsumption"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceGetInfoForMoveIn.GetInfoForMoveIn" {
    mutate {
      replace => {"ProcessName" => "ElkGetMoveInPreparation"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceGetInfoForMoveOut.GetInfoForMoveOut" {
    mutate {
      replace => {"ProcessName" => "ElkGetMoveOutPreparation"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceRegisterMoveIn.RegisterMoveIn" {
    mutate {
      replace => {"ProcessName" => "ElkCreateMoveIn"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceRegisterMoveOut.RegisterMoveOut" {
    mutate {
      replace => {"ProcessName" => "ElkCreateMoveOut"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceGetFileMngmntInfo.GetFileManagementInfo" {
    mutate {
      replace => {"ProcessName" => "ElkGetCollectionFile"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceRegisterContactForm.RegisterContactForm" {
    mutate {
      replace => {"ProcessName" => "ElkCreateContact"}
      }
    }

  if [ProcessName] == "H2O_CUS_PortalServiceChangeAgreementData.ChangeAgreementData" {
    mutate {
      replace => {"ProcessName" => "ElkUpdateAgreement"}
      }
    }


  if [ProcessName] == "H2O_CUS_PortalServiceChangeBankAccount.ChangeBankAccount" {
    mutate {
      replace => {"ProcessName" => "ElkUpdateBankAccount"}
      }
    }
}

  output {

  if [application] == "eLoket" {
  elasticsearch {
    hosts => "localhost:9200"
    manage_template => false
    index => "eloket-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "W*8hpARFz7tN~v7rhbWT"
#    document_type => "%{[@metadata][type]}"
   }
  }

  if [application] == "MoKa" {
  elasticsearch {
    hosts => "localhost:9200"
    manage_template => false
    index => "filebeat-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "W*8hpARFz7tN~v7rhbWT"
#    document_type => "%{[@metadata][type]}"
   }
  }

}
