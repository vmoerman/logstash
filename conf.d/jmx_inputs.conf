input {
    jmx {
  #//Required
  path => "/etc/logstash/conf.d/jmx/"
  #polling_frequency => 60
  type => "jmx"
  nb_thread => 8
   }
}

filter {

if [metric_path] =~ ".ProcessCpuLoad.SystemLoadAverage" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.ObjectName" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.Version" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.Arch" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.AvailableProcessors" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.Name" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.SystemCpuLoad" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.TotalPhysicalMemorySize" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.FreePhysicalMemorySize" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.ProcessCpuTime" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.FreeSwapSpaceSize" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.TotalSwapSpaceSize" {
   drop {}
 } else if [metric_path] =~ ".ProcessCpuLoad.CommittedVirtualMemorySize" {
   drop {}
 } else if [metric_path] =~ ".Memory.ObjectName" {
   drop {}
 } else if [metric_path] =~ ".Memory.NonHeapMemoryUsage.used" {
   drop {}
 } else if [metric_path] =~ ".Memory.NonHeapMemoryUsage.max" {
   drop {}
 } else if [metric_path] =~ ".Memory.NonHeapMemoryUsage.committed" {
   drop {}
 } else if [metric_path] =~ ".Memory.NonHeapMemoryUsage.init" {
   drop {}
 } else if [metric_path] =~ ".Memory.HeapMemoryUsage.init" {
   drop {}
 } else if [metric_path] =~ ".Memory.ObjectPendingFinalizationCount" {
   drop {}
 } else if [metric_path] =~ ".Memory.Verbose_bool" {
   drop {}
 }

}

filter {

if [metric_path] =~ ".ProcessCpuLoad.ProcessCpuLoad" {

  mutate {
    gsub => [
      "metric_path", ".ProcessCpuLoad.ProcessCpuLoad", ""
    ]
  }

  mutate {
    rename => { "metric_value_number" => "ProcessCpuLoad" }
    rename => { "metric_path" => "ServiceName" }
  }
}

if [metric_path] =~ ".Memory.HeapMemoryUsage.used" {

  mutate {
    gsub => [
      "metric_path", ".Memory.HeapMemoryUsage.used", ""
    ]
  }

  mutate {
    rename => { "metric_value_number" => "HeapMemoryUsage.used" }
    rename => { "metric_path" => "ServiceName" }
  }
}

if [metric_path] =~ ".Memory.HeapMemoryUsage.max" {

  mutate {
    gsub => [
      "metric_path", ".Memory.HeapMemoryUsage.max", ""
    ]
  }

  mutate {
    rename => { "metric_value_number" => "HeapMemoryUsage.max" }
    rename => { "metric_path" => "ServiceName" }
  }
}

if [metric_path] =~ ".Memory.HeapMemoryUsage.committed" {

  mutate {
    gsub => [
      "metric_path", ".Memory.HeapMemoryUsage.committed", ""
    ]
  }

  mutate {
    rename => { "metric_value_number" => "HeapMemoryUsage.committed" }
    rename => { "metric_path" => "ServiceName" }
  }
}

}

output {
  elasticsearch {
    hosts => "localhost:9200"
    manage_template => false
    index => "jmx-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "W*8hpARFz7tN~v7rhbWT"
#    document_type => "%{[@metadata][type]}"
 }
}
