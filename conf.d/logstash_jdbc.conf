input {
  jdbc {
   jdbc_driver_library => "/usr/share/logstash/drivers/sqljdbc42.jar"
    jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    jdbc_connection_string => "jdbc:sqlserver://T-VMWLSQLAPP04.vmwitest.be\Tib_Log_TST:1433;user=tibcotst;password=UsNQatv3u5"
    jdbc_user => "tibcotst"
#    parameters => { "favorite_artist" => "Beethoven" }
    schedule => "*/5 * * * *"
    statement => "use Tib_log_TST exec sp_spaceused"
  }
}

input {
  jdbc {
   jdbc_driver_library => "/usr/share/logstash/drivers/sqljdbc42.jar"
    jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    jdbc_connection_string => "jdbc:sqlserver://T-VMWLSQLAPP04.vmwitest.be\Tib_log_acc:1433;user=tibcotst;password=UsNQatv3u5"
    jdbc_user => "tibcotst"
#    parameters => { "favorite_artist" => "Beethoven" }
    schedule => "*/5 * * * *"
    statement => "use Tib_log_acc exec sp_spaceused"
  }
}

input {
  jdbc {
   jdbc_driver_library => "/usr/share/logstash/drivers/sqljdbc42.jar"
    jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    jdbc_connection_string => "jdbc:sqlserver://T-VMWLSQLAPP04.vmwitest.be\Tib_Log_DEV:1433;user=tibcotst;password=UsNQatv3u5"
    jdbc_user => "tibcotst"
#    parameters => { "favorite_artist" => "Beethoven" }
    schedule => "*/5 * * * *"
    statement => "use Tib_log_DEV exec sp_spaceused"
  }
}

input {
  jdbc {
   jdbc_driver_library => "/usr/share/logstash/drivers/sqljdbc42.jar"
    jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    jdbc_connection_string => "jdbc:sqlserver://P-VMWLSQLAPP05.vmwi.be\Tib_Log:1433;user=tibcoprd;password=EsToLEc9xF"
    jdbc_user => "tibcoprd"
#    parameters => { "favorite_artist" => "Beethoven" }
    schedule => "*/5 * * * *"
    statement => "use Tib_log exec sp_spaceused"
  }
}


filter {

  mutate {
    gsub => [
      "database_size", " MB", ""
    ]
  }

  mutate {
    gsub => [
      "unallocated space", " MB", ""
    ]
 }

  mutate {
    rename => { "database_size" => "db_used_space" }
    rename => { "unallocated space" => "db_free_space" }
  }

  mutate {
    convert => {
      "db_used_space" => "float"
      "db_free_space" => "float"
    }
  }

}

output {
  elasticsearch {
    hosts => "localhost:9200"
    manage_template => false
    index => "jdbc-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "W*8hpARFz7tN~v7rhbWT"
#    document_type => "%{[@metadata][type]}"
  }
}
