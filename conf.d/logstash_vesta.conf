input {
  beats {
    port => 4020
  }
}

filter {                                                                                          
  grok {
    match => { "message"  => "%{TIMESTAMP_ISO8601:tstamp} %{LOGLEVEL:log-level}\s+\[%{DATA:thread}\] %{DATA:class}\s+\-\ %{DATA:level}\:\s+%{GREEDYDATA:xml}\. JobId.*" }
    match => { "message"  => "%{TIMESTAMP_ISO8601:tstamp} %{LOGLEVEL:log-level}\s+\[%{DATA:thread}\] %{DATA:class}\s+\-\ %{GREEDYDATA:error_msg}" }
  
  }                                                                                                   
  date {
     match => ["tstamp", "ISO8601"]
  }
  
  date {
     match => ["businessEventTimestamp", "ISO8601"]
  }
 
  mutate {
    gsub => [
      "xml", "&gt;&amp;lt;&amp;gt;", ">"

    ]
  }
 
  mutate {
    gsub => [
      "xml", "&lt;", "<"

    ]
  }
  mutate {
    gsub => [
      "xml","&amp;lt;", "<"

    ]
  }
  mutate {
    gsub => [
      "xml", "&gt;", ">"

    ]
  }
  mutate {
    gsub => [
      "xml","&amp;gt;", ">"

    ]
  }

  mutate {
    gsub => [
      "xml","&amp;#xD;", ">"

    ]
  }


  xml { 
   source => "xml"
   target => "transaction"
  }



# Cleanup of the data #######################################

if [level] == "L3"  {
    drop { }
}

if [level] == "L4" {
    drop { }
}

if [level] == "L6" {
    drop { }
}
##############################################################

# Parsing

if [level] == "L1" and [fields][ProcessName] == "VestaGetWorkSchedule" {
 xml {
 source => "xml"
      remove_namespaces => true
      xpath => [
        "logMessage/currentTimestamp/text()","businessEventTimestamp",
        "logMessage/jobContext/businessTransactionID/text()","businessTransactionID",
        "logMessage/jobContext/correlationID/text()","correlationID",
        "logMessage/jobContext/conversationID/text()","conversationID",
        "logMessage/logRequest/processStack/text()","businessService",
        "logMessage/logRequest/severity/text()","businessSeverity",
        "logMessage/jobContext/operation/text()","businessActivity" ]
      store_xml => false
   }  
     mutate {
      replace => {
       "businessEventTimestamp" => "%{[businessEventTimestamp][0]}"
       "businessTransactionID" => "%{[businessTransactionID][0]}"
       "correlationID" => "%{[correlationID][0]}"
       "conversationID" => "%{[conversationID][0]}"
       "businessService" => "%{[businessService][0]}"
       "businessSeverity" => "%{[businessSeverity][0]}"
       "businessActivity" => "%{[businessActivity][0]}"
      }
    }
 } 



if [level] == "L7" and [fields][ProcessName] == "VestaGetWorkSchedule" {
    xml {
      source => "xml"
      remove_namespaces => true
      suppress_empty => false
      xpath => [
        "logMessage/currentTimestamp/text()","businessEventTimestamp",
        "logMessage/jobContext/businessTransactionID/text()","businessTransactionID",
        "logMessage/jobContext/correlationID/text()","correlationID",
        "logMessage/jobContext/conversationID/text()","conversationID",
        "logMessage/logRequest/processStack/text()","businessService",
        "logMessage/logRequest/severity/text()","businessSeverity" ]
      store_xml => false
   }
     mutate {
      replace => {
       "businessEventTimestamp" => "%{[businessEventTimestamp][0]}"
       "businessTransactionID" => "%{[businessTransactionID][0]}"
       "correlationID" => "%{[correlationID][0]}"
       "conversationID" => "%{[conversationID][0]}"
       "businessService" => "%{[businessService][0]}"
      }
    }
 }

 if [level] == "L1" and [fields][ProcessName] == "VestaGetWorkScheduleResults" {
 xml {
 source => "xml"
      remove_namespaces => true
      xpath => [
        "logMessage/currentTimestamp/text()","businessEventTimestamp",
        "logMessage/jobContext/businessTransactionID/text()","businessTransactionID",
        "logMessage/jobContext/correlationID/text()","correlationID",
        "logMessage/jobContext/conversationID/text()","conversationID",
        "logMessage/logRequest/processStack/text()","businessService",
        "logMessage/logRequest/severity/text()","businessSeverity",
        "logMessage/jobContext/operation/text()","businessActivity" ]
      store_xml => false
   }  
     mutate {
      replace => {
       "businessEventTimestamp" => "%{[businessEventTimestamp][0]}"
       "businessTransactionID" => "%{[businessTransactionID][0]}"
       "correlationID" => "%{[correlationID][0]}"
       "conversationID" => "%{[conversationID][0]}"
       "businessService" => "%{[businessService][0]}"
       "businessSeverity" => "%{[businessSeverity][0]}"
       "businessActivity" => "%{[businessActivity][0]}"
      }
    }
 } 

if [level] == "L7" and [fields][ProcessName] == "VestaGetWorkScheduleResults" {
    xml {
      source => "xml"
      remove_namespaces => true
      suppress_empty => false
      xpath => [
        "logMessage/currentTimestamp/text()","businessEventTimestamp",
        "logMessage/jobContext/businessTransactionID/text()","businessTransactionID",
        "logMessage/jobContext/correlationID/text()","correlationID",
        "logMessage/jobContext/conversationID/text()","conversationID",
        "logMessage/logRequest/processStack/text()","businessService",
        "logMessage/logRequest/severity/text()","businessSeverity" ]
      store_xml => false
   }
     mutate {
      replace => {
       "businessEventTimestamp" => "%{[businessEventTimestamp][0]}"
       "businessTransactionID" => "%{[businessTransactionID][0]}"
       "correlationID" => "%{[correlationID][0]}"
       "conversationID" => "%{[conversationID][0]}"
       "businessService" => "%{[businessService][0]}"
      }
    }
 }

 if [level] == "L1" and [fields][ProcessName] == "VestaNotifyDelivery" {
 xml {
 source => "xml"
      remove_namespaces => true
      xpath => [
        "logMessage/currentTimestamp/text()","businessEventTimestamp",
        "logMessage/jobContext/businessTransactionID/text()","businessTransactionID",
        "logMessage/jobContext/correlationID/text()","correlationID",
        "logMessage/jobContext/conversationID/text()","conversationID",
        "logMessage/logRequest/processStack/text()","businessService",
        "logMessage/logRequest/severity/text()","businessSeverity",
        "logMessage/jobContext/operation/text()","businessActivity" ]
      store_xml => false
   }  
     mutate {
      replace => {
       "businessEventTimestamp" => "%{[businessEventTimestamp][0]}"
       "businessTransactionID" => "%{[businessTransactionID][0]}"
       "correlationID" => "%{[correlationID][0]}"
       "conversationID" => "%{[conversationID][0]}"
       "businessService" => "%{[businessService][0]}"
       "businessSeverity" => "%{[businessSeverity][0]}"
       "businessActivity" => "%{[businessActivity][0]}"
      }
    }
 } 

if [level] == "L7" and [fields][ProcessName] == "VestaNotifyDelivery" {
    xml {
      source => "xml"
      remove_namespaces => true
      suppress_empty => false
      xpath => [
        "logMessage/currentTimestamp/text()","businessEventTimestamp",
        "logMessage/jobContext/businessTransactionID/text()","businessTransactionID",
        "logMessage/jobContext/correlationID/text()","correlationID",
        "logMessage/jobContext/conversationID/text()","conversationID",
        "logMessage/logRequest/processStack/text()","businessService",
        "logMessage/logRequest/severity/text()","businessSeverity" ]
      store_xml => false
   }
     mutate {
      replace => {
       "businessEventTimestamp" => "%{[businessEventTimestamp][0]}"
       "businessTransactionID" => "%{[businessTransactionID][0]}"
       "correlationID" => "%{[correlationID][0]}"
       "conversationID" => "%{[conversationID][0]}"
       "businessService" => "%{[businessService][0]}"
      }
    }
 }

 if [level] == "L1" and [fields][ProcessName] == "VestaGetWorkTimeLog" {
 xml {
 source => "xml"
      remove_namespaces => true
      xpath => [
        "logMessage/currentTimestamp/text()","businessEventTimestamp",
        "logMessage/jobContext/businessTransactionID/text()","businessTransactionID",
        "logMessage/jobContext/correlationID/text()","correlationID",
        "logMessage/jobContext/conversationID/text()","conversationID",
        "logMessage/logRequest/processStack/text()","businessService",
        "logMessage/logRequest/severity/text()","businessSeverity",
        "logMessage/jobContext/operation/text()","businessActivity" ]
      store_xml => false
   }  
     mutate {
      replace => {
       "businessEventTimestamp" => "%{[businessEventTimestamp][0]}"
       "businessTransactionID" => "%{[businessTransactionID][0]}"
       "correlationID" => "%{[correlationID][0]}"
       "conversationID" => "%{[conversationID][0]}"
       "businessService" => "%{[businessService][0]}"
       "businessSeverity" => "%{[businessSeverity][0]}"
       "businessActivity" => "%{[businessActivity][0]}"
      }
    }
 } 

if [level] == "L7" and [fields][ProcessName] == "VestaGetWorkTimeLog" {
    xml {
      source => "xml"
      remove_namespaces => true
      suppress_empty => false
      xpath => [
        "logMessage/currentTimestamp/text()","businessEventTimestamp",
        "logMessage/jobContext/businessTransactionID/text()","businessTransactionID",
        "logMessage/jobContext/correlationID/text()","correlationID",
        "logMessage/jobContext/conversationID/text()","conversationID",
        "logMessage/logRequest/processStack/text()","businessService",
        "logMessage/logRequest/severity/text()","businessSeverity" ]
      store_xml => false
   }
     mutate {
      replace => {
       "businessEventTimestamp" => "%{[businessEventTimestamp][0]}"
       "businessTransactionID" => "%{[businessTransactionID][0]}"
       "correlationID" => "%{[correlationID][0]}"
       "conversationID" => "%{[conversationID][0]}"
       "businessService" => "%{[businessService][0]}"
      }
    }
 }

# Cleanup of the data

mutate {
	add_field => {"ProcessName" => "%{[fields][ProcessName]}"}
}


# Closing bracket of the filters

}



# Drop invocation layer

filter {
 if [level] == "L7" and [businessService] =~ "invocation" {
  drop {}
 }
}







output {
  elasticsearch {
    hosts => "localhost:9200"
    manage_template => false
    index => "vesta-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "W*8hpARFz7tN~v7rhbWT"
#    document_type => "%{[@metadata][type]}"
 }
}





